{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_FIELD_NAME","SORT_FIELD_LENGTH","App","useState","sortField","setSortField","reverse","setReverse","localeGoods","goods","preperedGoods","map","good","i","name","length","id","sort","good1","good2","localeCompare","getPreperedGoods","className","onClick","type","ReactDOM","render","document","getElementById"],"mappings":"iOAIaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAkB,OAClBC,EAAoB,SAiCnB,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAEMC,EAnCR,SAA0BC,EAA1B,GAA0D,IAAvBL,EAAsB,EAAtBA,UAAWE,EAAW,EAAXA,QACtCI,EAAgBD,EAAME,KAAI,SAACC,EAAMC,GAAP,MAC9B,CACEC,KAAMF,EACNG,OAAQH,EAAKG,OACbC,GAAIH,EAAI,MAmBZ,OAfIT,GACFM,EAAcO,MAAK,SAACC,EAAOC,GACzB,OAAQf,GACN,KAAKJ,EACH,OAAOkB,EAAMd,GAAWgB,cAAcD,EAAMf,IAE9C,KAAKH,EACH,OAAOiB,EAAMd,GAAae,EAAMf,GAElC,QACE,OAAO,MAKXE,EACK,YAAII,GAAeJ,UAGrBI,EAOaW,CAClBtB,EAAiB,CAAEK,YAAWE,YAQhC,OACE,sBAAKgB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAMlB,EAAaL,IAC5BwB,KAAK,SACLF,UAAS,yBAAoBlB,IAAcJ,EAAkB,WAAa,IAH5E,iCAQA,wBACEuB,QAAS,kBAAMlB,EAAaJ,IAC5BuB,KAAK,SACLF,UAAS,4BAAuBlB,IAAcH,EAAoB,WAAa,IAHjF,4BAQA,wBACEsB,QAAS,kBAAMhB,GAAYD,IAC3BkB,KAAK,SACLF,UAAS,4BAAwBhB,EAAuB,GAAb,YAH7C,sBAQEF,GAAaE,IAEX,wBACEiB,QAnCa,WACvBlB,EAAa,IACbE,GAAW,IAkCDiB,KAAK,SACLF,UAAU,4BAHZ,sBAUN,6BACGd,EAAYG,KAAI,SAAAC,GAAI,OACnB,oBAAkB,UAAQ,OAA1B,SAAkCA,EAAKE,MAA9BF,EAAKI,aCtGxBS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.16932e0c.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_FIELD_NAME = 'name';\nconst SORT_FIELD_LENGTH = 'length';\n\nfunction getPreperedGoods(goods, { sortField, reverse }) {\n  const preperedGoods = goods.map((good, i) => (\n    {\n      name: good,\n      length: good.length,\n      id: i + 1,\n    }\n  ));\n\n  if (sortField) {\n    preperedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SORT_FIELD_NAME:\n          return good1[sortField].localeCompare(good2[sortField]);\n\n        case SORT_FIELD_LENGTH:\n          return good1[sortField] - good2[sortField];\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reverse) {\n    return [...preperedGoods].reverse();\n  }\n\n  return preperedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [reverse, setReverse] = useState(false);\n\n  const localeGoods = getPreperedGoods(\n    goodsFromServer, { sortField, reverse },\n  );\n\n  const handleClickReset = () => {\n    setSortField('');\n    setReverse(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => setSortField(SORT_FIELD_NAME)}\n          type=\"button\"\n          className={`button is-info ${sortField !== SORT_FIELD_NAME ? 'is-light' : ''}`}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => setSortField(SORT_FIELD_LENGTH)}\n          type=\"button\"\n          className={`button is-success ${sortField !== SORT_FIELD_LENGTH ? 'is-light' : ''}`}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={() => setReverse(!reverse)}\n          type=\"button\"\n          className={`button is-warning ${!reverse ? 'is-light' : ''}`}\n        >\n          Reverse\n        </button>\n\n        {(sortField || reverse)\n          && (\n            <button\n              onClick={handleClickReset}\n              type=\"button\"\n              className=\"button is-danger is-light\"\n            >\n              Reset\n            </button>\n          )}\n      </div>\n\n      <ul>\n        {localeGoods.map(good => (\n          <li key={good.id} data-cy=\"Good\">{good.name}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}